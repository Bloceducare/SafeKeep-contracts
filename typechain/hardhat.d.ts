/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IDiamondCut",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondCut__factory>;
    getContractFactory(
      name: "IDiamondLoupe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDiamondLoupe__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC173",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC173__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IModuleData",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IModuleData__factory>;
    getContractFactory(
      name: "IVaultDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultDiamond__factory>;
    getContractFactory(
      name: "IVaultFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultFacet__factory>;
    getContractFactory(
      name: "IVaultFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultFactory__factory>;
    getContractFactory(
      name: "DiamondCutFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFacet__factory>;
    getContractFactory(
      name: "DMSFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DMSFacet__factory>;
    getContractFactory(
      name: "ERC1155Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Facet__factory>;
    getContractFactory(
      name: "ERC20Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Facet__factory>;
    getContractFactory(
      name: "ERC721Facet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Facet__factory>;
    getContractFactory(
      name: "EtherFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EtherFacet__factory>;
    getContractFactory(
      name: "ModuleManagerFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleManagerFacet__factory>;
    getContractFactory(
      name: "OwnershipFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnershipFacet__factory>;
    getContractFactory(
      name: "LibDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDiamond__factory>;
    getContractFactory(
      name: "LibDMS",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibDMS__factory>;
    getContractFactory(
      name: "LibErrors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibErrors__factory>;
    getContractFactory(
      name: "LibEther",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibEther__factory>;
    getContractFactory(
      name: "LibModuleUpgrades",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibModuleUpgrades__factory>;
    getContractFactory(
      name: "LibTokens",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibTokens__factory>;
    getContractFactory(
      name: "VaultDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultDiamond__factory>;
    getContractFactory(
      name: "DiamondCutFactoryFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondCutFactoryFacet__factory>;
    getContractFactory(
      name: "DiamondLoupeFactoryFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DiamondLoupeFactoryFacet__factory>;
    getContractFactory(
      name: "ModuleRegistryFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ModuleRegistryFacet__factory>;
    getContractFactory(
      name: "VaultSpawnerFacet",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultSpawnerFacet__factory>;
    getContractFactory(
      name: "LibFactoryDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibFactoryDiamond__factory>;
    getContractFactory(
      name: "LibModuleRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LibModuleRegistry__factory>;
    getContractFactory(
      name: "VaultFactoryDiamond",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultFactoryDiamond__factory>;

    getContractAt(
      name: "IDiamondCut",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondCut>;
    getContractAt(
      name: "IDiamondLoupe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDiamondLoupe>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC173",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC173>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IModuleData",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IModuleData>;
    getContractAt(
      name: "IVaultDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultDiamond>;
    getContractAt(
      name: "IVaultFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultFacet>;
    getContractAt(
      name: "IVaultFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultFactory>;
    getContractAt(
      name: "DiamondCutFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFacet>;
    getContractAt(
      name: "DiamondLoupeFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFacet>;
    getContractAt(
      name: "DMSFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DMSFacet>;
    getContractAt(
      name: "ERC1155Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Facet>;
    getContractAt(
      name: "ERC20Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Facet>;
    getContractAt(
      name: "ERC721Facet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Facet>;
    getContractAt(
      name: "EtherFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EtherFacet>;
    getContractAt(
      name: "ModuleManagerFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ModuleManagerFacet>;
    getContractAt(
      name: "OwnershipFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnershipFacet>;
    getContractAt(
      name: "LibDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDiamond>;
    getContractAt(
      name: "LibDMS",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibDMS>;
    getContractAt(
      name: "LibErrors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibErrors>;
    getContractAt(
      name: "LibEther",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibEther>;
    getContractAt(
      name: "LibModuleUpgrades",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibModuleUpgrades>;
    getContractAt(
      name: "LibTokens",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibTokens>;
    getContractAt(
      name: "VaultDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultDiamond>;
    getContractAt(
      name: "DiamondCutFactoryFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondCutFactoryFacet>;
    getContractAt(
      name: "DiamondLoupeFactoryFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DiamondLoupeFactoryFacet>;
    getContractAt(
      name: "ModuleRegistryFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ModuleRegistryFacet>;
    getContractAt(
      name: "VaultSpawnerFacet",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultSpawnerFacet>;
    getContractAt(
      name: "LibFactoryDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibFactoryDiamond>;
    getContractAt(
      name: "LibModuleRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LibModuleRegistry>;
    getContractAt(
      name: "VaultFactoryDiamond",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultFactoryDiamond>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
