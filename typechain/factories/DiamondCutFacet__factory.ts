/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../DiamondCutFacet";

const _abi = [
  {
    inputs: [],
    name: "EmptyCalldata",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "ImmutableFunction",
    type: "error",
  },
  {
    inputs: [],
    name: "InValidFacetCutAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InitCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MustBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoCode",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSelectorsInFacet",
    type: "error",
  },
  {
    inputs: [],
    name: "NoZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NonEmptyCalldata",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "NonExistentSelector",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SameSelectorReplacement",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SelectorExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611218806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610d3d565b610045565b005b61008f610052858761100a565b8484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061009692505050565b5050505050565b60005b83518110156102b95760008482815181106100c457634e487b7160e01b600052603260045260246000fd5b6020026020010151602001519050600060028111156100f357634e487b7160e01b600052602160045260246000fd5b81600281111561011357634e487b7160e01b600052602160045260246000fd5b141561017e5761017985838151811061013c57634e487b7160e01b600052603260045260246000fd5b60200260200101516000015186848151811061016857634e487b7160e01b600052603260045260246000fd5b602002602001015160400151610304565b6102a6565b60018160028111156101a057634e487b7160e01b600052602160045260246000fd5b1415610206576101798583815181106101c957634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518684815181106101f557634e487b7160e01b600052603260045260246000fd5b60200260200101516040015161044a565b600281600281111561022857634e487b7160e01b600052602160045260246000fd5b141561028e5761017985838151811061025157634e487b7160e01b600052603260045260246000fd5b60200260200101516000015186848151811061027d57634e487b7160e01b600052603260045260246000fd5b60200260200101516040015161059c565b60405162c5e5d760e31b815260040160405180910390fd5b50806102b181611174565b915050610099565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738383836040516102ed93929190610e31565b60405180910390a16102ff8282610678565b505050565b60008151116103265760405163092d2fe560e41b815260040160405180910390fd5b6000610330610781565b90506001600160a01b0383166103595760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b03831660009081526001820160205260409020546001600160601b03811661038c5761038c8285610806565b60005b835181101561008f5760008482815181106103ba57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0316801561041c5760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6104288583868a610857565b836104328161118f565b9450505050808061044290611174565b91505061038f565b600081511161046c5760405163092d2fe560e41b815260040160405180910390fd5b6000610476610781565b90506001600160a01b03831661049f5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b03831660009081526001820160205260409020546001600160601b0381166104d2576104d28285610806565b60005b835181101561008f57600084828151811061050057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681141561056357604051631c04188b60e31b81526001600160e01b031983166004820152602401610413565b61056e8582846108f7565b61057a8583868a610857565b836105848161118f565b9450505050808061059490611174565b9150506104d5565b60008151116105be5760405163092d2fe560e41b815260040160405180910390fd5b60006105c8610781565b90506001600160a01b038316156105f257604051631be65fe560e21b815260040160405180910390fd5b60005b825181101561067257600083828151811061062057634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b031661065d8482846108f7565b5050808061066a90611174565b9150506105f5565b50505050565b6001600160a01b0382166106aa578051156106a65760405163c21b1ab760e01b815260040160405180910390fd5b5050565b80516106c957604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146106e2576106e282610c87565b600080836001600160a01b0316836040516106fd9190610e15565b600060405180830381855af49150503d8060008114610738576040519150601f19603f3d011682016040523d82523d6000602084013e61073d565b606091505b50915091508161067257805115610768578060405162461bcd60e51b81526004016104139190610f2d565b604051633a18f8dd60e01b815260040160405180910390fd5b6000806107de60405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052601181528060200170111a585b5bdb99131bdd5c19519858d95d607a1b815250610ca7565b7f7f9df2342d5c190c7450de83944c941641ce57327a12faebc868644d2853cdbf1892915050565b61080f81610c87565b6003820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661092957604051622902d360e91b81526001600160e01b031982166004820152602401610413565b6001600160a01b03821630141561095f5760405163069731c560e41b81526001600160e01b031982166004820152602401610413565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b031692916109ae91610ff3565b9050808214610abc576001600160a01b038416600090815260018601602052604081208054839081106109f157634e487b7160e01b600052603260045260246000fd5b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610a5057634e487b7160e01b600052603260045260246000fd5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610af357634e487b7160e01b600052603160045260246000fd5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120558061008f576003850154600090610b5290600190610ff3565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610c1d576000876003018381548110610b9f57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546003890180546001600160a01b039092169250829184908110610bde57634e487b7160e01b600052603260045260246000fd5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600301805480610c3e57634e487b7160e01b600052603160045260246000fd5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b806106a657604051633c11a9c560e21b815260040160405180910390fd5b60008282604051602001610cbc929190610f47565b60405160208183030381529060405280519060200120905092915050565b80356001600160a01b0381168114610cf157600080fd5b919050565b60008083601f840112610d07578182fd5b50813567ffffffffffffffff811115610d1e578182fd5b602083019150836020828501011115610d3657600080fd5b9250929050565b600080600080600060608688031215610d54578081fd5b853567ffffffffffffffff80821115610d6b578283fd5b818801915088601f830112610d7e578283fd5b813581811115610d8c578384fd5b8960208260051b8501011115610da0578384fd5b60208301975080965050610db660208901610cda565b94506040880135915080821115610dcb578283fd5b50610dd888828901610cf6565b969995985093965092949392505050565b60008151808452610e01816020860160208601611148565b601f01601f19169290920160200192915050565b60008251610e27818460208701611148565b9190910192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b01875b84811015610efd57898403607f19018652815180516001600160a01b03168552838101518986019060038110610e9d57634e487b7160e01b8c52602160045260248cfd5b868601526040918201519186018a9052815190819052908401908a90898701905b80831015610ee85783516001600160e01b0319168252928601926001929092019190860190610ebe565b50978501979550505090820190600101610e59565b50506001600160a01b038a16908801528681036040880152610f1f8189610de9565b9a9950505050505050505050565b602081526000610f406020830184610de9565b9392505050565b604081526000610f5a6040830185610de9565b8281036020840152610f6c8185610de9565b95945050505050565b6040516060810167ffffffffffffffff81118282101715610f9857610f986111cc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610fc757610fc76111cc565b604052919050565b600067ffffffffffffffff821115610fe957610fe96111cc565b5060051b60200190565b600082821015611005576110056111b6565b500390565b600061101d61101884610fcf565b610f9e565b838152602080820191908460053688821b8301111561103a578586fd5b855b8881101561113b57823567ffffffffffffffff8082111561105b578889fd5b818a0191506060823603121561106f578889fd5b611077610f75565b61108083610cda565b81528683013560038110611092578a8bfd5b81880152604083810135838111156110a8578b8cfd5b939093019236601f8501126110bb578a8bfd5b833592506110cb61101884610fcf565b83815288810190858a0136868a1b88018c0111156110e7578d8efd5b8d96505b8587101561111e5780356001600160e01b03198116811461110a578e8ffd5b835260019690960195918a01918a016110eb565b50918301919091525088525050948301949183019160010161103c565b5092979650505050505050565b60005b8381101561116357818101518382015260200161114b565b838111156106725750506000910152565b6000600019821415611188576111886111b6565b5060010190565b60006001600160601b03808316818114156111ac576111ac6111b6565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c700bd74b24db3251fd22de7ede407bd5e72f95b3a00af4c7a05f31121da35bd64736f6c63430008040033";

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
