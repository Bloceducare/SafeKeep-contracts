/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondCutFactoryFacet,
  DiamondCutFactoryFacetInterface,
} from "../DiamondCutFactoryFacet";

const _abi = [
  {
    inputs: [],
    name: "EmptyCalldata",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "ImmutableFunction",
    type: "error",
  },
  {
    inputs: [],
    name: "InValidFacetCutAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InitCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MustBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoCode",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSelectorsInFacet",
    type: "error",
  },
  {
    inputs: [],
    name: "NoZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NonEmptyCalldata",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "NonExistentSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDiamondOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SameSelectorReplacement",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SelectorExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111a0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610cd3565b610045565b005b61004d61009e565b61009761005a8587610f72565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b60008051602061114b833981519152600401546001600160a01b031633146100d957604051630305808160e41b815260040160405180910390fd5b565b60005b83518110156102fe57600084828151811061010957634e487b7160e01b600052603260045260246000fd5b60200260200101516020015190506000600281111561013857634e487b7160e01b600052602160045260246000fd5b81600281111561015857634e487b7160e01b600052602160045260246000fd5b14156101c3576101be85838151811061018157634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518684815181106101ad57634e487b7160e01b600052603260045260246000fd5b602002602001015160400151610349565b6102eb565b60018160028111156101e557634e487b7160e01b600052602160045260246000fd5b141561024b576101be85838151811061020e57634e487b7160e01b600052603260045260246000fd5b60200260200101516000015186848151811061023a57634e487b7160e01b600052603260045260246000fd5b602002602001015160400151610492565b600281600281111561026d57634e487b7160e01b600052602160045260246000fd5b14156102d3576101be85838151811061029657634e487b7160e01b600052603260045260246000fd5b6020026020010151600001518684815181106102c257634e487b7160e01b600052603260045260246000fd5b6020026020010151604001516105e7565b60405162c5e5d760e31b815260040160405180910390fd5b50806102f6816110dc565b9150506100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161033293929190610dc7565b60405180910390a161034482826106c6565b505050565b600081511161036b5760405163092d2fe560e41b815260040160405180910390fd5b60008051602061114b8339815191526001600160a01b0383166103a15760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b03831660009081526001820160205260409020546001600160601b0381166103d4576103d482856107cf565b60005b835181101561009757600084828151811061040257634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156104645760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6104708583868a610820565b8361047a816110f7565b9450505050808061048a906110dc565b9150506103d7565b60008151116104b45760405163092d2fe560e41b815260040160405180910390fd5b60008051602061114b8339815191526001600160a01b0383166104ea5760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b03831660009081526001820160205260409020546001600160601b03811661051d5761051d82856107cf565b60005b835181101561009757600084828151811061054b57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b039081169087168114156105ae57604051631c04188b60e31b81526001600160e01b03198316600482015260240161045b565b6105b98582846108c0565b6105c58583868a610820565b836105cf816110f7565b945050505080806105df906110dc565b915050610520565b60008151116106095760405163092d2fe560e41b815260040160405180910390fd5b60008051602061114b8339815191526001600160a01b0383161561064057604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156106c057600083828151811061066e57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166106ab8482846108c0565b505080806106b8906110dc565b915050610643565b50505050565b6001600160a01b0382166106f8578051156106f45760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805161071757604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146107305761073082610c50565b600080836001600160a01b03168360405161074b9190610dab565b600060405180830381855af49150503d8060008114610786576040519150601f19603f3d011682016040523d82523d6000602084013e61078b565b606091505b5091509150816106c0578051156107b6578060405162461bcd60e51b815260040161045b9190610ec3565b604051633a18f8dd60e01b815260040160405180910390fd5b6107d881610c50565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b0382166108f257604051622902d360e91b81526001600160e01b03198216600482015260240161045b565b6001600160a01b0382163014156109285760405163069731c560e41b81526001600160e01b03198216600482015260240161045b565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b0316929161097791610f5b565b9050808214610a85576001600160a01b038416600090815260018601602052604081208054839081106109ba57634e487b7160e01b600052603260045260246000fd5b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b925082919085908110610a1957634e487b7160e01b600052603260045260246000fd5b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b03841660009081526001860160205260409020805480610abc57634e487b7160e01b600052603160045260246000fd5b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b031985168252869052604081205580610097576002850154600090610b1b90600190610f5b565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610be6576000876002018381548110610b6857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546002890180546001600160a01b039092169250829184908110610ba757634e487b7160e01b600052603260045260246000fd5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610c0757634e487b7160e01b600052603160045260246000fd5b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b806106f457604051633c11a9c560e21b815260040160405180910390fd5b80356001600160a01b0381168114610c8757600080fd5b919050565b60008083601f840112610c9d578182fd5b50813567ffffffffffffffff811115610cb4578182fd5b602083019150836020828501011115610ccc57600080fd5b9250929050565b600080600080600060608688031215610cea578081fd5b853567ffffffffffffffff80821115610d01578283fd5b818801915088601f830112610d14578283fd5b813581811115610d22578384fd5b8960208260051b8501011115610d36578384fd5b60208301975080965050610d4c60208901610c70565b94506040880135915080821115610d61578283fd5b50610d6e88828901610c8c565b969995985093965092949392505050565b60008151808452610d978160208601602086016110b0565b601f01601f19169290920160200192915050565b60008251610dbd8184602087016110b0565b9190910192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b01875b84811015610e9357898403607f19018652815180516001600160a01b03168552838101518986019060038110610e3357634e487b7160e01b8c52602160045260248cfd5b868601526040918201519186018a9052815190819052908401908a90898701905b80831015610e7e5783516001600160e01b0319168252928601926001929092019190860190610e54565b50978501979550505090820190600101610def565b50506001600160a01b038a16908801528681036040880152610eb58189610d7f565b9a9950505050505050505050565b602081526000610ed66020830184610d7f565b9392505050565b6040516060810167ffffffffffffffff81118282101715610f0057610f00611134565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f2f57610f2f611134565b604052919050565b600067ffffffffffffffff821115610f5157610f51611134565b5060051b60200190565b600082821015610f6d57610f6d61111e565b500390565b6000610f85610f8084610f37565b610f06565b838152602080820191908460053688821b83011115610fa2578586fd5b855b888110156110a357823567ffffffffffffffff80821115610fc3578889fd5b818a01915060608236031215610fd7578889fd5b610fdf610edd565b610fe883610c70565b81528683013560038110610ffa578a8bfd5b8188015260408381013583811115611010578b8cfd5b939093019236601f850112611023578a8bfd5b83359250611033610f8084610f37565b83815288810190858a0136868a1b88018c01111561104f578d8efd5b8d96505b858710156110865780356001600160e01b031981168114611072578e8ffd5b835260019690960195918a01918a01611053565b509183019190915250885250509483019491830191600101610fa4565b5092979650505050505050565b60005b838110156110cb5781810151838201526020016110b3565b838111156106c05750506000910152565b60006000198214156110f0576110f061111e565b5060010190565b60006001600160601b03808316818114156111145761111461111e565b6001019392505050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfef0012a687af7752843524cd4908ddea76b8cf30b148d95b1684517391251d00da2646970667358221220f2c4e51b9c5643d3557994c691926511369f5f2cc19973b041a5db59f77f7fb664736f6c63430008040033";

export class DiamondCutFactoryFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondCutFactoryFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFactoryFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondCutFactoryFacet {
    return super.attach(address) as DiamondCutFactoryFacet;
  }
  connect(signer: Signer): DiamondCutFactoryFacet__factory {
    return super.connect(signer) as DiamondCutFactoryFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFactoryFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFactoryFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFactoryFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DiamondCutFactoryFacet;
  }
}
