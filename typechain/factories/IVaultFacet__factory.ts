/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IVaultFacet, IVaultFacetInterface } from "../IVaultFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_vaultID",
        type: "uint256",
      },
    ],
    name: "EthDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "backup",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "startingBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "inheritors",
        type: "address[]",
      },
    ],
    name: "vaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_newInheritors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_weiShare",
        type: "uint256[]",
      },
    ],
    name: "addInheritors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "allEtherAllocations",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "inheritor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "weiAlloc",
            type: "uint256",
          },
        ],
        internalType: "struct IVaultFacet.AllInheritorEtherAllocs[]",
        name: "eAllocs",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newBackupAddress",
        type: "address",
      },
    ],
    name: "transferBackup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IVaultFacet__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultFacetInterface {
    return new utils.Interface(_abi) as IVaultFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVaultFacet {
    return new Contract(address, _abi, signerOrProvider) as IVaultFacet;
  }
}
