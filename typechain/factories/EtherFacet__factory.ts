/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EtherFacet, EtherFacetInterface } from "../EtherFacet";

const _abi = [
  {
    inputs: [],
    name: "AmountMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "EthWithdrawalError",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientEth",
    type: "error",
  },
  {
    inputs: [],
    name: "NotVaultOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "depositEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105fb806100206000396000f3fe6080604052600436106100295760003560e01c806326839f171461002e578063ce56c45414610043575b600080fd5b61004161003c36600461046d565b610063565b005b34801561004f57600080fd5b5061004161005e366004610485565b61006f565b61006c81610085565b50565b6100776100f9565b6100818282610103565b5050565b3481146100a5576040516355e97b0d60e01b815260040160405180910390fd5b7f68e6c1885896ef6bee8fc3c844a09f7f4216386f01abba29307b8914c078ad1081336100d0610255565b604080519384526001600160a01b0390921660208401529082015260600160405180910390a150565b610101610268565b565b604080518082019091526003815262444d5360e81b602082015247906101289061029c565b156101685760006101376102d5565b9050610143818361054d565b9150818411156101665760405163500d4efb60e11b815260040160405180910390fd5b505b8281106101e6576000826001600160a01b03168460405160006040518083038185875af1925050503d80600081146101bc576040519150601f19603f3d011682016040523d82523d6000602084013e6101c1565b606091505b50509050806101e057634e487b7160e01b600052600160045260246000fd5b506101ff565b604051631c79d6cd60e11b815260040160405180910390fd5b7f118315e777ba73caf1c37255d332d12ed062905ad925a41183238e39cdfa0442838361022a610255565b604080519384526001600160a01b0390921660208401529082015260600160405180910390a1505050565b600061025f610365565b60040154905090565b610270610365565b600501546001600160a01b0316331461010157604051630e7fea9d60e01b815260040160405180910390fd5b6000806102a7610365565b905080600601836040516102bb91906104eb565b9081526040519081900360200190205460ff169392505050565b6000806102e06103ea565b90506000805b600283015481101561035e5782600401600084600201838154811061031b57634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0316835282019290925260400190205461034a9083610535565b91508061035681610594565b9150506102e6565b5092915050565b6000806103c260405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052601181528060200170111a585b5bdb99131bdd5c19519858d95d607a1b81525061043a565b7f7f9df2342d5c190c7450de83944c941641ce57327a12faebc868644d2853cdbf1892915050565b6000806103c260405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052600881528060200167111354d19858d95d60c21b8152505b6000828260405160200161044f929190610507565b60405160208183030381529060405280519060200120905092915050565b60006020828403121561047e578081fd5b5035919050565b60008060408385031215610497578081fd5b8235915060208301356001600160a01b03811681146104b4578182fd5b809150509250929050565b600081518084526104d7816020860160208601610564565b601f01601f19169290920160200192915050565b600082516104fd818460208701610564565b9190910192915050565b60408152600061051a60408301856104bf565b828103602084015261052c81856104bf565b95945050505050565b60008219821115610548576105486105af565b500190565b60008282101561055f5761055f6105af565b500390565b60005b8381101561057f578181015183820152602001610567565b8381111561058e576000848401525b50505050565b60006000198214156105a8576105a86105af565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205b9a36a9f1e383ebb6592b9702de92b8ee82580064f3e817d1d8d9614ef4f3d764736f6c63430008040033";

export class EtherFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EtherFacet> {
    return super.deploy(overrides || {}) as Promise<EtherFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EtherFacet {
    return super.attach(address) as EtherFacet;
  }
  connect(signer: Signer): EtherFacet__factory {
    return super.connect(signer) as EtherFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EtherFacetInterface {
    return new utils.Interface(_abi) as EtherFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EtherFacet {
    return new Contract(address, _abi, signerOrProvider) as EtherFacet;
  }
}
