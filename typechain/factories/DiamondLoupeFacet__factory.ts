/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "facetFunctionSelectors_",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061075b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100845780637a0ed62714610099578063adfca15e146100ae578063cdffacc6146100ce575b600080fd5b61006f61006a36600461053d565b6100f9565b60405190151581526020015b60405180910390f35b61008c61012a565b60405161007b91906105f4565b6100a1610196565b60405161007b9190610654565b6100c16100bc36600461050f565b610378565b60405161007b9190610641565b6100e16100dc36600461053d565b610422565b6040516001600160a01b03909116815260200161007b565b600080610104610457565b6001600160e01b0319909316600090815260029093016020525050604090205460ff1690565b60606000610136610457565b6003810180546040805160208084028201810190925282815293945083018282801561018b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161016d575b505050505091505090565b606060006101a2610457565b60038101549091508067ffffffffffffffff8111156101d157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561021757816020015b6040805180820190915260008152606060208201528152602001906001900390816101ef5790505b50925060005b8181101561037257600083600301828154811061024a57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160009054906101000a90046001600160a01b031690508085838151811061028b57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03928316905290821660009081526001860182526040908190208054825181850281018501909352808352919290919083018282801561032a57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116102ec5790505b505050505085838151811061034f57634e487b7160e01b600052603260045260246000fd5b60200260200101516020018190525050808061036a906106fe565b91505061021d565b50505090565b60606000610384610457565b6001600160a01b0384166000908152600182016020908152604091829020805483518184028101840190945280845293945091929083018282801561041557602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116103d75790505b5050505050915050919050565b60008061042d610457565b6001600160e01b03199093166000908152602093909352505060409020546001600160a01b031690565b6000806104b460405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052601181528060200170111a585b5bdb99131bdd5c19519858d95d607a1b8152506104dc565b7f7f9df2342d5c190c7450de83944c941641ce57327a12faebc868644d2853cdbf1892915050565b600082826040516020016104f19291906106d0565b60405160208183030381529060405280519060200120905092915050565b600060208284031215610520578081fd5b81356001600160a01b0381168114610536578182fd5b9392505050565b60006020828403121561054e578081fd5b81356001600160e01b031981168114610536578182fd5b6000815180845260208085019450808401835b8381101561059e5781516001600160e01b03191687529582019590820190600101610578565b509495945050505050565b60008151808452815b818110156105ce576020818501810151868301820152016105b2565b818111156105df5782602083870101525b50601f01601f19169290920160200192915050565b6020808252825182820181905260009190848201906040850190845b818110156106355783516001600160a01b031683529284019291840191600101610610565b50909695505050505050565b6020815260006105366020830184610565565b60006020808301818452808551808352604092508286019150828160051b870101848801865b838110156106c257888303603f19018552815180516001600160a01b031684528701518784018790526106af87850182610565565b958801959350509086019060010161067a565b509098975050505050505050565b6040815260006106e360408301856105a9565b82810360208401526106f581856105a9565b95945050505050565b600060001982141561071e57634e487b7160e01b81526011600452602481fd5b506001019056fea264697066735822122087fdc8c6a327cd4f09a553afadaaf114b74d0528422564dec6fad0a90b621cb864736f6c63430008040033";

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
