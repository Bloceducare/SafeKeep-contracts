/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ModuleManagerFacet,
  ModuleManagerFacetInterface,
} from "../ModuleManagerFacet";

const _abi = [
  {
    inputs: [],
    name: "ModuleAlreadyInstalled",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleNotInstalled",
    type: "error",
  },
  {
    inputs: [],
    name: "NotVaultOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "downgradeVaultWithModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveModules",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "isActiveModule",
    outputs: [
      {
        internalType: "bool",
        name: "exists_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "upgradeVaultWithModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112bf806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632063666b146100515780637a39c8c514610066578063a71ba6a614610079578063da094e4c14610097575b600080fd5b61006461005f366004610e20565b6100ba565b005b610064610074366004610e20565b6100c8565b6100816100d2565b60405161008e9190610f72565b60405180910390f35b6100aa6100a5366004610e8d565b6101b6565b604051901515815260200161008e565b6100c482826101ef565b5050565b6100c482826104af565b606060006100de61068b565b6008810180546040805160208084028201810190925282815293945060009084015b828210156101ac57838290600052602060002001805461011f90611207565b80601f016020809104026020016040519081016040528092919081815260200182805461014b90611207565b80156101985780601f1061016d57610100808354040283529160200191610198565b820191906000526020600020905b81548152906001019060200180831161017b57829003601f168201915b505050505081526020019060010190610100565b5050505091505090565b6000806101c161068b565b905080600601836040516101d59190610f56565b9081526040519081900360200190205460ff169392505050565b6101f7610710565b600061020161068b565b9050806006018383604051610217929190610f46565b9081526040519081900360200190205460ff1661024757604051632a6f792960e01b815260040160405180910390fd5b6000610251610746565b6001600160a01b0316634f764e4985856040518363ffffffff1660e01b815260040161027e9291906110cd565b60006040518083038186803b15801561029657600080fd5b505afa1580156102aa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102d29190810190610c9b565b905060005b815181101561039e57600282828151811061030257634e487b7160e01b600052603260045260246000fd5b602002602001015160200190600281111561032d57634e487b7160e01b600052602160045260246000fd5b9081600281111561034e57634e487b7160e01b600052602160045260246000fd5b81525050600082828151811061037457634e487b7160e01b600052603260045260246000fd5b60209081029190910101516001600160a01b0390911690528061039681611242565b9150506102d7565b506040516307e4c70760e21b81523090631f931c1c906103c5908490600090600401610fd3565b600060405180830381600087803b1580156103df57600080fd5b505af11580156103f3573d6000803e3d6000fd5b50505050600182600601858560405161040d929190610f46565b9081526040805160209281900383018120805460ff191694151594909417909355601f8601829004820283018201905284825261046991600885019187908790819084018382808284376000920191909152506107be92505050565b8383604051610479929190610f46565b604051908190038120907f2aa0ec1d5d1b057719744f666433ddd500e7fb5ccb368d6c35c84b86a018487b90600090a250505050565b6104b7610710565b60006104c161068b565b90508060060183836040516104d7929190610f46565b9081526040519081900360200190205460ff161561050857604051631261bbf160e11b815260040160405180910390fd5b6000610512610746565b6001600160a01b0316634f764e4985856040518363ffffffff1660e01b815260040161053f9291906110cd565b60006040518083038186803b15801561055757600080fd5b505afa15801561056b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105939190810190610c9b565b6040516307e4c70760e21b81529091503090631f931c1c906105bc908490600090600401610fd3565b600060405180830381600087803b1580156105d657600080fd5b505af11580156105ea573d6000803e3d6000fd5b505050506001826006018585604051610604929190610f46565b90815260405160209181900382019020805460ff191692151592909217909155600883018054600181018255600091825291902061064491018585610b0d565b508383604051610655929190610f46565b604051908190038120907f060752e0387f8d89f7ef7778ec099ff6297dcc4a3ad3a6e5f142fcfd8d8c80bb90600090a250505050565b6000806106e860405180604001604052600f8152806020016e111a585b5bdb9910dd5d119858d95d608a1b81525060405180604001604052601181528060200170111a585b5bdb99131bdd5c19519858d95d607a1b815250610a22565b7f7f9df2342d5c190c7450de83944c941641ce57327a12faebc868644d2853cdbf1892915050565b61071861068b565b600501546001600160a01b0316331461074457604051630e7fea9d60e01b815260040160405180910390fd5b565b6000306001600160a01b03166366bd442d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561078157600080fd5b505afa158015610795573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b99190610c7a565b905090565b81546108105760405162461bcd60e51b815260206004820152601a60248201527f4e6f6e2d656c656d656e746564206e756d626572206172726179000000000000604482015260640160405180910390fd5b60006108ec8284805480602002602001604051908101604052809291908181526020016000905b828210156108e357838290600052602060002001805461085690611207565b80601f016020809104026020016040519081016040528092919081815260200182805461088290611207565b80156108cf5780601f106108a4576101008083540402835291602001916108cf565b820191906000526020600020905b8154815290600101906020018083116108b257829003601f168201915b505050505081526020019060010190610837565b50505050610a55565b835490915060011415610936578280548061091757634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160006109339190610b91565b90555b825460011015610a1d57805b8354610950906001906111c0565b8110156109df57836109638260016111a8565b8154811061098157634e487b7160e01b600052603260045260246000fd5b906000526020600020018482815481106109ab57634e487b7160e01b600052603260045260246000fd5b906000526020600020019080546109c190611207565b6109cc929190610bce565b50806109d781611242565b915050610942565b50828054806109fe57634e487b7160e01b600052603160045260246000fd5b600190038181906000526020600020016000610a1a9190610b91565b90555b505050565b60008282604051602001610a379291906110fc565b60405160208183030381529060405280519060200120905092915050565b60005b8151811015610aae57610a92828281518110610a8457634e487b7160e01b600052603260045260246000fd5b602002602001015184610ab4565b15610a9c57610aae565b80610aa681611242565b915050610a58565b92915050565b600081604051602001610ac79190610f56565b6040516020818303038152906040528051906020012083604051602001610aee9190610f56565b6040516020818303038152906040528051906020012014905092915050565b828054610b1990611207565b90600052602060002090601f016020900481019282610b3b5760008555610b81565b82601f10610b545782800160ff19823516178555610b81565b82800160010185558215610b81579182015b82811115610b81578235825591602001919060010190610b66565b50610b8d929150610c49565b5090565b508054610b9d90611207565b6000825580601f10610bad575050565b601f016020900490600052602060002090810190610bcb9190610c49565b50565b828054610bda90611207565b90600052602060002090601f016020900481019282610bfc5760008555610b81565b82601f10610c0d5780548555610b81565b82800160010185558215610b8157600052602060002091601f016020900482015b82811115610b81578254825591600101919060010190610c2e565b5b80821115610b8d5760008155600101610c4a565b80516001600160a01b0381168114610c7557600080fd5b919050565b600060208284031215610c8b578081fd5b610c9482610c5e565b9392505050565b600060208284031215610cac578081fd5b815167ffffffffffffffff80821115610cc3578283fd5b818401915084601f830112610cd6578283fd5b8151610ce9610ce482611184565b611153565b80828252602082019150602085018860208560051b8801011115610d0b578687fd5b865b84811015610e1257815186811115610d23578889fd5b87016060818c03601f19011215610d38578889fd5b610d4061112a565b610d4c60208301610c5e565b8152604082015160038110610d5f578a8bfd5b6020820152606082015188811115610d75578a8bfd5b8083019250508b603f830112610d8957898afd5b6020820151610d9a610ce482611184565b80828252602082019150604085018f60408560051b8801011115610dbc578d8efd5b8d95505b83861015610df45780516001600160e01b031981168114610ddf578e8ffd5b83526001959095019460209283019201610dc0565b50604084015250508552506020938401939190910190600101610d0d565b509098975050505050505050565b60008060208385031215610e32578081fd5b823567ffffffffffffffff80821115610e49578283fd5b818501915085601f830112610e5c578283fd5b813581811115610e6a578384fd5b866020828501011115610e7b578384fd5b60209290920196919550909350505050565b60006020808385031215610e9f578182fd5b823567ffffffffffffffff80821115610eb6578384fd5b818501915085601f830112610ec9578384fd5b813581811115610edb57610edb611273565b610eed601f8201601f19168501611153565b91508082528684828501011115610f02578485fd5b80848401858401378101909201929092529392505050565b60008151808452610f328160208601602086016111d7565b601f01601f19169290920160200192915050565b8183823760009101908152919050565b60008251610f688184602087016111d7565b9190910192915050565b6000602080830181845280855180835260408601915060408160051b8701019250838701855b82811015610fc657603f19888603018452610fb4858351610f1a565b94509285019290850190600101610f98565b5092979650505050505050565b60006060808301818452808651808352608092508286019150828160051b8701016020808a01875b8481101561109f57898403607f19018652815180516001600160a01b0316855283810151898601906003811061103f57634e487b7160e01b8c52602160045260248cfd5b868601526040918201519186018a9052815190819052908401908a90898701905b8083101561108a5783516001600160e01b0319168252928601926001929092019190860190611060565b50978501979550505090820190600101610ffb565b50506001600160a01b0389168882015250868103604088015260008152602081019998505050505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60408152600061110f6040830185610f1a565b82810360208401526111218185610f1a565b95945050505050565b6040516060810167ffffffffffffffff8111828210171561114d5761114d611273565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561117c5761117c611273565b604052919050565b600067ffffffffffffffff82111561119e5761119e611273565b5060051b60200190565b600082198211156111bb576111bb61125d565b500190565b6000828210156111d2576111d261125d565b500390565b60005b838110156111f25781810151838201526020016111da565b83811115611201576000848401525b50505050565b600181811c9082168061121b57607f821691505b6020821081141561123c57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112565761125661125d565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220ae1272e09f096c76ce586bf49d9039cff57726928582edc497ea2bc6af6f6c2664736f6c63430008040033";

export class ModuleManagerFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ModuleManagerFacet> {
    return super.deploy(overrides || {}) as Promise<ModuleManagerFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ModuleManagerFacet {
    return super.attach(address) as ModuleManagerFacet;
  }
  connect(signer: Signer): ModuleManagerFacet__factory {
    return super.connect(signer) as ModuleManagerFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleManagerFacetInterface {
    return new utils.Interface(_abi) as ModuleManagerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ModuleManagerFacet {
    return new Contract(address, _abi, signerOrProvider) as ModuleManagerFacet;
  }
}
